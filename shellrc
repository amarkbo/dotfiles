# Shell agnostic settings (i.e. for both zsh and bash)

export EDITOR=vim

# go to git root
alias v='vim'
alias sv='sudo -E vim'
alias groot='cd $(git rev-parse --show-cdup)'
alias vime="vim -u ~/.nixenv/vim_encryptrc" 

# OS X or Linux
if [[ "$OSTYPE" == darwin* ]]; then
    # Keep this, because otherwise there's no classify
    alias ls='ls -FG'
else
    alias ls='ls --classify --color=auto'
    alias ack='ack-grep'

    # Attach to tmux
    if [[ "$TERM" != screen* ]]; then
        tmux attach
    fi
fi

if [ -n "$ZSH_VERSION" ]; then
    # Keeping this on emacs mode until I figure out how to deal with the vi mode debian issue
    # (see: http://www.mgoff.in/2012/05/09/zsh-command-history-cursor-at-the-end-of-the-line/)
    bindkey -e

    # http://stackoverflow.com/questions/3964068/zsh-automatically-run-ls-after-every-cd
    function chpwd() {
        emulate -L zsh
        ls
    }

elif [ -n "$BASH_VERSION" ]; then

    export PS1='\[\e[1m\][\u@\h\:\w] $\[\e[m\] '

    # http://askubuntu.com/questions/16106/how-can-i-create-an-alias-for-cd-and-ls
    function cd() {
        new_directory="$*";
        if [ $# -eq 0 ]; then 
            new_directory=${HOME};
        fi;
        builtin cd "${new_directory}" && ls
    }

fi

function xfind() {
    if [ -n "$3" ]; then
        grep -n "$1" `find $2 -type f -regextype posix-extended -regex "$3"`
    elif [ -n "$2" ]; then
        grep -n "$1" `find $2 -type f `
    elif [ -n "$1" ]; then
        grep -n "$1" `find . -type f`
    else
        echo "usage: xfind phrase path file-regex";
    fi
}
